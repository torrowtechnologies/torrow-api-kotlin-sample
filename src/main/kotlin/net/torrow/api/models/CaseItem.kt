/**
 * Torrow API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package net.torrow.api.models

import net.torrow.api.models.Schedule
import net.torrow.api.models.SearchMode
import net.torrow.api.models.SolutionData
import java.time.LocalDateTime
import java.util.ArrayList

/**
 * Событие
 * @param beginDate Дата начала
 * @param description Описание
 * @param endDate Дата окончания
 * @param placeId Идентификатор места проведения (из справочника мест)
 * @param serviceId Идентификатор услуги (если событие по услуге (заказ, запись или сеанс))
 * @param groupId Идентификатор группового события (если текущее событие явлеется штучным, созданным по периодическому групповому)
 * @param place Место проведения (в произвольной форме)
 * @param caseState Состояние события
 * @param caseType Тип события
 * @param caseStateDate Дата последнего изменения состояния события
 * @param personalInfo Информация текущего пользователя, связанная с событием
 * @param bookingResourceList Список ресурсов события
 * @param schedule Расписание
 * @param registrationOpen Начало регистрации в секундах относительно начала события (прим: -3600, если записываться на событие можно не раньше чем за час до начала)
 * @param registrationClose Окончание регистрации в секундах относительно начала события (прим: 300, если записываться на событие можно не позже 5мин почле начала)
 * @param visitCard Визитка события
 * @param bookingDuration Длительность бронирования (не используется)
 * @param maxConsumerQuantity Моксимальное количество участников события
 * @param bookingConsumerQuantity Разерервированное количество мест участников события
 * @param executorUsagePercent Процент занятости исполнителя в этом событии (используется для учета/ограничения загрузки исполнителей)
 * @param availableResources - (не используется)
 * @param needApproval Признак необходимости подтверждения участия в событии
 * @param createSingleCases Признак создания штучных событий, если текущее событие периодическое
 * @param orderNumber Номер заказа
 * @param checkinPermission Настройки ограничений записи на событие
 * @param hidden Скрывать в календаре
 * @param consumersCount Текущее количество участников
 * @param caseSummary Краткая информация о событии (название услуги, имя участика и исполнителя, стоимость итп)
 * @param appendixList Дополнительнай информация, которая будет прикрепляться для участников события
 * @param participateFieldRequirements  Настройки полей контактной информации для участников
 * @param resourceGroupList Описание доступных групп ресурсов для события
 * @param priceProperties Настройка стоимости события
 * @param priority - (не используется)
 * @param clientGroupId Идентификатор базы клиентов
 * @param caseActionList Описание действий
 * @param loyaltyTransactionPropertiesList - (не используется)
 * @param name Имя события
 * @param uniqueName Уникально имя события
 * @param image Картинка
 * @param masterInfo Информация об элементе, с которого копировалось данное событие
 * @param publicityType Тип публичности
 * @param searchMode Доступность события в поиске
 * @param anyoneAccess Доступность события
 * @param tags Тэги
 * @param rating Рейтинг
 * @param blockInfo Информация о модерации/блокировки события
 * @param groupInfo Информация о настройках группы, если данное событие является групповым элементом
 * @param solutionData Дополнительные данные решения
 * @param childItemStats Статистика по вложенным в это событие элементам
 * @param feedbackOptions Настройки отзывов
 * @param integrationIds Идентификаторы интеграций
 * @param id Идентификатор
 * @param meta Метаинформация
 */
data class CaseItem(

    val beginDate: LocalDateTime? = null,
    val description: String? = null,
    val endDate: LocalDateTime? = null,
    val placeId: String? = null,
    val serviceId: String? = null,
    val groupId: String? = null,
    val place: String? = null,
    val caseState: CaseState? = null,
    val caseType: CaseType? = null,
    val caseStateDate: LocalDateTime? = null,
    val personalInfo: CasePersonalInfo? = null,
    val bookingResourceList: Array<BookingResource>? = null,
    val schedule: Schedule? = null,
    val registrationOpen: Int? = null,
    val registrationClose: Int? = null,
    val visitCard: CaseVisitCard? = null,
    val bookingDuration: Int? = null,
    val maxConsumerQuantity: Int? = null,
    val bookingConsumerQuantity: Int? = null,
    val executorUsagePercent: Double? = null,
    val availableResources: AvailableResources? = null,
    val needApproval: Boolean? = null,
    val createSingleCases: Boolean? = null,
    val orderNumber: OrderNumber? = null,
    val checkinPermission: CheckinPermission? = null,
    val hidden: Boolean? = null,
    val consumersCount: Int? = null,
    val caseSummary: CaseSummary? = null,
    val appendixList: Array<Appendix>? = null,
    val participateFieldRequirements: ParticipateFieldRequirements? = null,
    val resourceGroupList: Array<ResourceGroup>? = null,
    val priceProperties: PriceProperties? = null,
    val priority: Double? = null,
    val clientGroupId: String? = null,
    val caseActionList: Array<CaseAction>? = null,
    val loyaltyTransactionPropertiesList: Array<LoyaltyTransactionProperties>? = null,
    val name: String? = null,
    val uniqueName: String? = null,
    val image: FileInfo? = null,
    val masterInfo: MasterInfo? = null,
    val publicityType: PublicityType? = null,
    val searchMode: SearchMode? = null,
    val anyoneAccess: AnyoneAccess? = null,
    val tags: Array<String>? = null,
    val rating: Rating? = null,
    val blockInfo: BlockInfo? = null,
    val groupInfo: GroupInfo? = null,
    val solutionData: SolutionData? = null,
    val childItemStats: Array<ChildItemStat>? = null,
    val feedbackOptions: FeedbackOptions? = null,
    val integrationIds: Array<String>? = null,
    val id: String? = null,
    val meta: ObjectInfo? = null,
    val discriminator: String = "CaseItem",
) {
}
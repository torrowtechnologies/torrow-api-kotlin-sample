/**
 * Torrow API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.apis

import net.torrow.api.models.ItemViewSortCondition
import net.torrow.api.models.NoteItem
import net.torrow.api.models.ParticipantState
import net.torrow.api.models.ParticipantType

import io.swagger.client.infrastructure.*

class IftttQueriesApi(basePath: kotlin.String = "/") : ApiClient(basePath) {

    /**
     * 
     * 
     * @param take  (optional, default to 2147483647)
     * @param skip  (optional, default to 0)
     * @param lmfrom  (optional)
     * @param lmto  (optional)
     * @param includeDeleted  (optional, default to false)
     * @param sort  (optional)
     * @param profileId  (optional)
     * @param onlyWithEmptyProfile  (optional)
     * @param participantStateList  (optional)
     * @param participantTypeList  (optional)
     * @return kotlin.Array<NoteItem>
     */
    @Suppress("UNCHECKED_CAST")
    fun apiV1IftttV1QueriesPersonalNotesGet(take: kotlin.Int? = null, skip: kotlin.Int? = null, lmfrom: java.time.LocalDateTime? = null, lmto: java.time.LocalDateTime? = null, includeDeleted: kotlin.Boolean? = null, sort: ItemViewSortCondition? = null, profileId: kotlin.String? = null, onlyWithEmptyProfile: kotlin.Boolean? = null, participantStateList: kotlin.Array<ParticipantState>? = null, participantTypeList: kotlin.Array<ParticipantType>? = null): kotlin.Array<NoteItem> {
        val localVariableQuery: MultiValueMap = mapOf("take" to listOf("$take"), "skip" to listOf("$skip"), "lmfrom" to listOf("$lmfrom"), "lmto" to listOf("$lmto"), "includeDeleted" to listOf("$includeDeleted"), "sort" to listOf("$sort"), "profileId" to listOf("$profileId"), "onlyWithEmptyProfile" to listOf("$onlyWithEmptyProfile"), "participantStateList" to toMultiValue(participantStateList!!.toList(), "multi"), "participantTypeList" to toMultiValue(participantTypeList!!.toList(), "multi"))
        val localVariableConfig = RequestConfig(
                RequestMethod.GET,
                "/api/v1/ifttt/v1/queries/personal_notes", query = localVariableQuery
        )
        val response = request<kotlin.Array<NoteItem>>(
                localVariableConfig
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.Array<NoteItem>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }
}
